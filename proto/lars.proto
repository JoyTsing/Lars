syntax = "proto3";

package lars;

/* Lars系统的消息ID */
enum MessageId {
  ID_UNKNOW = 0;              // 占位
  ID_GetRouterRequest = 1;    // 向DNS请求Router对应的关系的消息ID
  ID_GetRouterResponse = 2;   // DNS回复给Agent结果的消息
  ID_ReportStatusRequest = 3; // 上报host调用状态信息请求消息ID
}

/* 主机的信息 */
message HostInfo {
  int32 ip = 1;
  int32 port = 2;
}

/* 请求dns路由信息的消息 */
message GetRouterRequest {
  int32 modid = 1;
  int32 cmdid = 2;
}

/* DNS回复的消息 */
message GetRouterResponse {
  int32 modid = 1;
  int32 cmdid = 2;
  repeated HostInfo hosts = 3;
}

// 一个主机的调用结果
message HostCallResult {
  int32 ip = 1;      // ip
  int32 port = 2;    // port
  uint32 succ = 3;   // 调度成功次数
  uint32 fail = 4;   // 调度失败次数
  bool overload = 5; // 是否过载
}

// 上报主机的调用结构给reporter模块
message ReportStatusRequest {
  int32 modid = 1;
  int32 cmdid = 2;
  int32 caller = 3;
  repeated HostCallResult results = 4;
  uint32 timestamp = 5;
}